/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Breadcrumb } from "./components/breadcrumbs/breadcrumbs.types";
import { NwccButtonVariant } from "./components/button/button.types";
import { NwccIcon, NwccIconSize } from "./components/icon/icon.types";
import { NwccLinkSize } from "./components/link/link.types";
import { NwccTextComponents, NwccTextSize, NwccTextWeight } from "./components/text/text.types";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface NdwcBreadcrumbs {
        "breadcrumbs": Breadcrumb[];
        "dark": boolean;
    }
    interface NdwcButton {
        "compact": boolean;
        "dark": boolean;
        "disabled": boolean;
        "icon": string;
        "type": string;
        "variant": NwccButtonVariant;
    }
    interface NdwcButtonGroup {
        "vertical": boolean;
    }
    interface NdwcCheckbox {
        "checked": boolean;
        "disabled": boolean;
        "error": boolean;
        "indeterminate": boolean;
        "name": string;
    }
    interface NdwcIcon {
        "color": string;
        "icon": NwccIcon | string;
        "size": NwccIconSize;
    }
    interface NdwcInfoBanner {
        "action": string;
        "label": string;
        "soft": boolean;
    }
    interface NdwcInput {
        "disabled": boolean;
        "error": string;
        "hint": string;
        "icon": string;
        "inputmode": string;
        "label": string;
        "readonly": boolean;
        "type": string;
        "value": string;
    }
    interface NdwcLink {
        "external": boolean;
        "href": string;
        "icon": string;
        "size": NwccLinkSize;
    }
    interface NdwcRichButton {
        "disabled": boolean;
        "icon": string;
        "label": string;
        "labelFirst": boolean;
    }
    interface NdwcRoundButton {
        "disabled": boolean;
        "icon": string;
    }
    interface NdwcText {
        "as": NwccTextComponents;
        "header": boolean;
        "size": NwccTextSize;
        "weight": NwccTextWeight;
    }
}
export interface NdwcBreadcrumbsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLNdwcBreadcrumbsElement;
}
export interface NdwcCheckboxCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLNdwcCheckboxElement;
}
export interface NdwcInfoBannerCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLNdwcInfoBannerElement;
}
export interface NdwcInputCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLNdwcInputElement;
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLNdwcBreadcrumbsElement extends Components.NdwcBreadcrumbs, HTMLStencilElement {
    }
    var HTMLNdwcBreadcrumbsElement: {
        prototype: HTMLNdwcBreadcrumbsElement;
        new (): HTMLNdwcBreadcrumbsElement;
    };
    interface HTMLNdwcButtonElement extends Components.NdwcButton, HTMLStencilElement {
    }
    var HTMLNdwcButtonElement: {
        prototype: HTMLNdwcButtonElement;
        new (): HTMLNdwcButtonElement;
    };
    interface HTMLNdwcButtonGroupElement extends Components.NdwcButtonGroup, HTMLStencilElement {
    }
    var HTMLNdwcButtonGroupElement: {
        prototype: HTMLNdwcButtonGroupElement;
        new (): HTMLNdwcButtonGroupElement;
    };
    interface HTMLNdwcCheckboxElement extends Components.NdwcCheckbox, HTMLStencilElement {
    }
    var HTMLNdwcCheckboxElement: {
        prototype: HTMLNdwcCheckboxElement;
        new (): HTMLNdwcCheckboxElement;
    };
    interface HTMLNdwcIconElement extends Components.NdwcIcon, HTMLStencilElement {
    }
    var HTMLNdwcIconElement: {
        prototype: HTMLNdwcIconElement;
        new (): HTMLNdwcIconElement;
    };
    interface HTMLNdwcInfoBannerElement extends Components.NdwcInfoBanner, HTMLStencilElement {
    }
    var HTMLNdwcInfoBannerElement: {
        prototype: HTMLNdwcInfoBannerElement;
        new (): HTMLNdwcInfoBannerElement;
    };
    interface HTMLNdwcInputElement extends Components.NdwcInput, HTMLStencilElement {
    }
    var HTMLNdwcInputElement: {
        prototype: HTMLNdwcInputElement;
        new (): HTMLNdwcInputElement;
    };
    interface HTMLNdwcLinkElement extends Components.NdwcLink, HTMLStencilElement {
    }
    var HTMLNdwcLinkElement: {
        prototype: HTMLNdwcLinkElement;
        new (): HTMLNdwcLinkElement;
    };
    interface HTMLNdwcRichButtonElement extends Components.NdwcRichButton, HTMLStencilElement {
    }
    var HTMLNdwcRichButtonElement: {
        prototype: HTMLNdwcRichButtonElement;
        new (): HTMLNdwcRichButtonElement;
    };
    interface HTMLNdwcRoundButtonElement extends Components.NdwcRoundButton, HTMLStencilElement {
    }
    var HTMLNdwcRoundButtonElement: {
        prototype: HTMLNdwcRoundButtonElement;
        new (): HTMLNdwcRoundButtonElement;
    };
    interface HTMLNdwcTextElement extends Components.NdwcText, HTMLStencilElement {
    }
    var HTMLNdwcTextElement: {
        prototype: HTMLNdwcTextElement;
        new (): HTMLNdwcTextElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "ndwc-breadcrumbs": HTMLNdwcBreadcrumbsElement;
        "ndwc-button": HTMLNdwcButtonElement;
        "ndwc-button-group": HTMLNdwcButtonGroupElement;
        "ndwc-checkbox": HTMLNdwcCheckboxElement;
        "ndwc-icon": HTMLNdwcIconElement;
        "ndwc-info-banner": HTMLNdwcInfoBannerElement;
        "ndwc-input": HTMLNdwcInputElement;
        "ndwc-link": HTMLNdwcLinkElement;
        "ndwc-rich-button": HTMLNdwcRichButtonElement;
        "ndwc-round-button": HTMLNdwcRoundButtonElement;
        "ndwc-text": HTMLNdwcTextElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface NdwcBreadcrumbs {
        "breadcrumbs"?: Breadcrumb[];
        "dark"?: boolean;
        "onBreadcrumbClick"?: (event: NdwcBreadcrumbsCustomEvent<MouseEvent>) => void;
    }
    interface NdwcButton {
        "compact"?: boolean;
        "dark"?: boolean;
        "disabled"?: boolean;
        "icon"?: string;
        "type"?: string;
        "variant"?: NwccButtonVariant;
    }
    interface NdwcButtonGroup {
        "vertical"?: boolean;
    }
    interface NdwcCheckbox {
        "checked"?: boolean;
        "disabled"?: boolean;
        "error"?: boolean;
        "indeterminate"?: boolean;
        "name"?: string;
        "onCheckboxBlur"?: (event: NdwcCheckboxCustomEvent<FocusEvent>) => void;
        "onCheckboxChange"?: (event: NdwcCheckboxCustomEvent<InputEvent>) => void;
        "onCheckboxFocus"?: (event: NdwcCheckboxCustomEvent<FocusEvent>) => void;
    }
    interface NdwcIcon {
        "color"?: string;
        "icon": NwccIcon | string;
        "size"?: NwccIconSize;
    }
    interface NdwcInfoBanner {
        "action"?: string;
        "label"?: string;
        "onActionClicked"?: (event: NdwcInfoBannerCustomEvent<MouseEvent>) => void;
        "soft"?: boolean;
    }
    interface NdwcInput {
        "disabled"?: boolean;
        "error"?: string;
        "hint"?: string;
        "icon"?: string;
        "inputmode"?: string;
        "label"?: string;
        "onInputBlur"?: (event: NdwcInputCustomEvent<FocusEvent>) => void;
        "onInputChange"?: (event: NdwcInputCustomEvent<InputEvent>) => void;
        "onInputFocus"?: (event: NdwcInputCustomEvent<FocusEvent>) => void;
        "onInputInput"?: (event: NdwcInputCustomEvent<InputEvent>) => void;
        "readonly"?: boolean;
        "type"?: string;
        "value"?: string;
    }
    interface NdwcLink {
        "external"?: boolean;
        "href"?: string;
        "icon"?: string;
        "size"?: NwccLinkSize;
    }
    interface NdwcRichButton {
        "disabled"?: boolean;
        "icon"?: string;
        "label"?: string;
        "labelFirst"?: boolean;
    }
    interface NdwcRoundButton {
        "disabled"?: boolean;
        "icon": string;
    }
    interface NdwcText {
        "as"?: NwccTextComponents;
        "header"?: boolean;
        "size"?: NwccTextSize;
        "weight"?: NwccTextWeight;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "ndwc-breadcrumbs": NdwcBreadcrumbs;
        "ndwc-button": NdwcButton;
        "ndwc-button-group": NdwcButtonGroup;
        "ndwc-checkbox": NdwcCheckbox;
        "ndwc-icon": NdwcIcon;
        "ndwc-info-banner": NdwcInfoBanner;
        "ndwc-input": NdwcInput;
        "ndwc-link": NdwcLink;
        "ndwc-rich-button": NdwcRichButton;
        "ndwc-round-button": NdwcRoundButton;
        "ndwc-text": NdwcText;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "ndwc-breadcrumbs": LocalJSX.NdwcBreadcrumbs & JSXBase.HTMLAttributes<HTMLNdwcBreadcrumbsElement>;
            "ndwc-button": LocalJSX.NdwcButton & JSXBase.HTMLAttributes<HTMLNdwcButtonElement>;
            "ndwc-button-group": LocalJSX.NdwcButtonGroup & JSXBase.HTMLAttributes<HTMLNdwcButtonGroupElement>;
            "ndwc-checkbox": LocalJSX.NdwcCheckbox & JSXBase.HTMLAttributes<HTMLNdwcCheckboxElement>;
            "ndwc-icon": LocalJSX.NdwcIcon & JSXBase.HTMLAttributes<HTMLNdwcIconElement>;
            "ndwc-info-banner": LocalJSX.NdwcInfoBanner & JSXBase.HTMLAttributes<HTMLNdwcInfoBannerElement>;
            "ndwc-input": LocalJSX.NdwcInput & JSXBase.HTMLAttributes<HTMLNdwcInputElement>;
            "ndwc-link": LocalJSX.NdwcLink & JSXBase.HTMLAttributes<HTMLNdwcLinkElement>;
            "ndwc-rich-button": LocalJSX.NdwcRichButton & JSXBase.HTMLAttributes<HTMLNdwcRichButtonElement>;
            "ndwc-round-button": LocalJSX.NdwcRoundButton & JSXBase.HTMLAttributes<HTMLNdwcRoundButtonElement>;
            "ndwc-text": LocalJSX.NdwcText & JSXBase.HTMLAttributes<HTMLNdwcTextElement>;
        }
    }
}
