/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Breadcrumb } from "./components/breadcrumbs/breadcrumbs.types";
import { NwccButtonVariant } from "./components/button/button.types";
import { NwccIcon, NwccIconSize } from "./components/icon/icon.types";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface NdwcBreadcrumbs {
        "breadcrumbs": Breadcrumb[];
        "dark": boolean;
    }
    interface NdwcButton {
        "compact": boolean;
        "dark": boolean;
        "disabled": boolean;
        "icon": string;
        "type": string;
        "variant": NwccButtonVariant;
    }
    interface NdwcCheckbox {
        "checked": boolean;
        "disabled": boolean;
        "error": boolean;
        "indeterminate": boolean;
        "name": string;
    }
    interface NdwcIcon {
        "color": string;
        "icon": NwccIcon | string;
        "size": NwccIconSize;
    }
}
export interface NdwcBreadcrumbsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLNdwcBreadcrumbsElement;
}
export interface NdwcCheckboxCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLNdwcCheckboxElement;
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLNdwcBreadcrumbsElement extends Components.NdwcBreadcrumbs, HTMLStencilElement {
    }
    var HTMLNdwcBreadcrumbsElement: {
        prototype: HTMLNdwcBreadcrumbsElement;
        new (): HTMLNdwcBreadcrumbsElement;
    };
    interface HTMLNdwcButtonElement extends Components.NdwcButton, HTMLStencilElement {
    }
    var HTMLNdwcButtonElement: {
        prototype: HTMLNdwcButtonElement;
        new (): HTMLNdwcButtonElement;
    };
    interface HTMLNdwcCheckboxElement extends Components.NdwcCheckbox, HTMLStencilElement {
    }
    var HTMLNdwcCheckboxElement: {
        prototype: HTMLNdwcCheckboxElement;
        new (): HTMLNdwcCheckboxElement;
    };
    interface HTMLNdwcIconElement extends Components.NdwcIcon, HTMLStencilElement {
    }
    var HTMLNdwcIconElement: {
        prototype: HTMLNdwcIconElement;
        new (): HTMLNdwcIconElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "ndwc-breadcrumbs": HTMLNdwcBreadcrumbsElement;
        "ndwc-button": HTMLNdwcButtonElement;
        "ndwc-checkbox": HTMLNdwcCheckboxElement;
        "ndwc-icon": HTMLNdwcIconElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface NdwcBreadcrumbs {
        "breadcrumbs"?: Breadcrumb[];
        "dark"?: boolean;
        "onBreadcrumbClicked"?: (event: NdwcBreadcrumbsCustomEvent<MouseEvent>) => void;
    }
    interface NdwcButton {
        "compact"?: boolean;
        "dark"?: boolean;
        "disabled"?: boolean;
        "icon"?: string;
        "type"?: string;
        "variant"?: NwccButtonVariant;
    }
    interface NdwcCheckbox {
        "checked"?: boolean;
        "disabled"?: boolean;
        "error"?: boolean;
        "indeterminate"?: boolean;
        "name"?: string;
        "onOnBlur"?: (event: NdwcCheckboxCustomEvent<FocusEvent>) => void;
        "onOnChange"?: (event: NdwcCheckboxCustomEvent<InputEvent>) => void;
    }
    interface NdwcIcon {
        "color"?: string;
        "icon"?: NwccIcon | string;
        "size"?: NwccIconSize;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "ndwc-breadcrumbs": NdwcBreadcrumbs;
        "ndwc-button": NdwcButton;
        "ndwc-checkbox": NdwcCheckbox;
        "ndwc-icon": NdwcIcon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "ndwc-breadcrumbs": LocalJSX.NdwcBreadcrumbs & JSXBase.HTMLAttributes<HTMLNdwcBreadcrumbsElement>;
            "ndwc-button": LocalJSX.NdwcButton & JSXBase.HTMLAttributes<HTMLNdwcButtonElement>;
            "ndwc-checkbox": LocalJSX.NdwcCheckbox & JSXBase.HTMLAttributes<HTMLNdwcCheckboxElement>;
            "ndwc-icon": LocalJSX.NdwcIcon & JSXBase.HTMLAttributes<HTMLNdwcIconElement>;
        }
    }
}
